(()=>{"use strict";const t={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let o;const e=new Uint8Array(16);function n(){if(!o&&(o="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!o))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return o(e)}const r=[];for(let t=0;t<256;++t)r.push((t+256).toString(16).slice(1));let u=localStorage.getItem("uniqueId")||sessionStorage.getItem("uniqueId");u||(u=function(o,e,u){if(t.randomUUID&&!e&&!o)return t.randomUUID();const s=(o=o||{}).random||(o.rng||n)();if(s[6]=15&s[6]|64,s[8]=63&s[8]|128,e){u=u||0;for(let t=0;t<16;++t)e[u+t]=s[t];return e}return function(t,o=0){return(r[t[o+0]]+r[t[o+1]]+r[t[o+2]]+r[t[o+3]]+"-"+r[t[o+4]]+r[t[o+5]]+"-"+r[t[o+6]]+r[t[o+7]]+"-"+r[t[o+8]]+r[t[o+9]]+"-"+r[t[o+10]]+r[t[o+11]]+r[t[o+12]]+r[t[o+13]]+r[t[o+14]]+r[t[o+15]]).toLowerCase()}(s)}(),sessionStorage.setItem("uniqueId",u)),fetch("/visitor_count",{headers:{"X-Unique-Id":u}}).then((t=>t.json())).then((t=>{console.log("Visitor count:",t.count)})).catch((t=>{console.error("Error updating visitor count:",t)}))})();